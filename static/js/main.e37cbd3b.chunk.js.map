{"version":3,"sources":["Components/AddCommand.tsx","Components/Command.tsx","Components/Search.tsx","Components/SearchResults.tsx","App.tsx","index.tsx"],"names":["AddCommand","addNew","setAddNew","className","onClick","Command","selectedItemData","admin","editItem","allData","name","platform","description","options","howTo","window","confirm","fetch","id","method","then","res","json","data","console","log","catch","err","Search","searchForBtn","handleKeypress","selectedElement","editString","useState","searchString","setSearchString","autoFocus","onBlur","target","focus","selectionStart","length","focusInput","autoComplete","value","spellCheck","onChange","e","onKeyDown","currentTarget","SearchResults","searchData","selectItem","selectedItem","dataToPrint","selectedIndex","map","item","index","key","toUpperCase","App","editItemData","setEditItemData","selectedMenuItem","setSelectedMenuItem","setSearchData","setEditString","setSelectedElement","setAdmin","getData","postData","tempElement","headers","body","JSON","stringify","selectedOrEditItem","searchstring","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAgBeA,EARoB,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,UACzC,OACI,yBAAKC,UAAU,0BACX,4BAAQA,UAAU,SAASC,QAAS,WAAKF,GAAWD,KAAYA,EAAS,SAAW,iBCuCjFI,EAvCiB,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,iBAAkBC,EAA6B,EAA7BA,MAAON,EAAsB,EAAtBA,OAAQO,EAAc,EAAdA,SACzDC,EAAUH,EAchB,OAAGG,EAEC,6BACI,yBAAKN,UAAU,sBACX,uBAAGA,UAAY,uBAAf,KAAwCM,EAAQC,KAAhD,KACA,uBAAGP,UAAY,0BAAf,KAA2CM,EAAQE,SAAnD,KACA,uBAAGR,UAAY,6BAAf,KAA+CM,EAAQG,YAAvD,KACA,uBAAGT,UAAY,yBAAf,KAA2CM,EAAQI,QAAnD,KACA,uBAAGV,UAAY,yBAAf,KAA2CM,EAAQK,MAAnD,KACEP,IAAUN,EACR,yBAAKE,UAAU,uBACX,4BAAQA,UAAU,SAASC,QAAS,kBAAMI,MAA1C,QACA,4BAAQL,UAAU,SAASC,QAAS,WAtBjDW,OAAOC,QAAQ,kBACdC,MAAM,wCAAwCX,EAAiBY,GAAG,CAC9DC,OAAQ,WAEXC,MAAK,SAAAC,GAAS,OAAOA,EAAIC,UACzBF,MAAK,SAAAG,GAAI,OAAIC,QAAQC,IAAIF,MACzBG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAI,QAASE,QAgBvB,WAEN,OAMV,sDCQOC,EA7CqB,SAAC,GAAyE,IAAxEC,EAAuE,EAAvEA,aAAcC,EAAyD,EAAzDA,eAAgB7B,EAAyC,EAAzCA,OAAQ8B,EAAiC,EAAjCA,gBAAiBC,EAAgB,EAAhBA,WAAgB,EACjEC,mBAAiB,IADgD,mBAClGC,EADkG,KACpFC,EADoF,KAezG,MAPkB,KAAfH,GAAsC,KAAjBE,GAAuBjC,GACxC+B,GACCG,EAAgBH,GAGxBR,QAAQC,IAAI,gBAAiBO,GAGzB,yBAAK7B,UAAU,cACX,wBAAIA,UAAU,gBAAd,kBACI,8BACI,yBAAKA,UAAU,oBACX,6BACI,2BAAOA,UAAU,eAAeiC,WAAW,EACvCC,OAAQ,mBAnBjB,SAACC,GAChBA,EAAOC,QACPD,EAAOE,eAAiBN,EAAaO,OAiBWC,CAAhB,EAAGJ,SACXK,aAAa,MAAMC,MAAOV,EAC1BW,WAAW,QACXC,SAAY,SAACC,GAAD,OAAOZ,EAAgBY,EAAET,OAAOM,QAC5CI,UAAc,SAACD,GACXA,EAAEE,cAAcT,eAAiBN,EAAaO,OAC9CX,EAAeiB,MAGvB,uBAAG5C,UAAY,yBAAyB4B,EAAxC,MAA+DG,EAA/D,MAEJ,4BAAQ/B,UAAU,uBAAuBC,QAAW,SAAC2C,GACjDlB,EAAaK,EAAca,GAC3BZ,EAAgB,MAFpB,kBCOTe,EAzCuB,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,WAAYC,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,aAExDC,GAFyF,EAAnBC,cAExD,IAoBlB,OAlBGJ,IACCG,EAAcH,EAAWK,KAAI,SAACC,EAAUC,GACpC,OAAGL,IAAiBK,EAEZ,wBAAIvD,UAAY,oCAAoCwD,IAAOF,EAAKvC,IAC5D,2BAAIuC,EAAK/C,KAAKkD,eACd,2BAAIH,EAAK9C,SAASiD,gBAM1B,wBAAIzD,UAAY,kBAAkBwD,IAAOF,EAAKvC,GAAId,QAAW,WAAKgD,EAAWM,KACzE,2BAAID,EAAK/C,KAAKkD,eACd,2BAAIH,EAAK9C,SAASiD,oBAK9B,yBAAKzD,UAAU,qBACX,yBAAKA,UAAY,cACb,wBAAIA,UAAY,eACZ,wBAAIA,UAAY,oCACZ,mCACA,wCAEJ,wBAAIA,UAAY,oCACZ,yCACA,0CAEHmD,MC4HNO,EA1JO,WAAO,IAAD,EACc5B,mBAA0B,CAACvB,KAAK,GAAGC,SAAS,GAAGC,YAAY,GAAGC,QAAQ,GAAGC,MAAM,KAD7F,mBACnBgD,EADmB,KACLC,EADK,OAEsB9B,mBAAiB,GAFvC,mBAEnB+B,EAFmB,KAEDC,EAFC,OAGUhC,mBAAS,IAHnB,mBAGnBkB,EAHmB,KAGPe,EAHO,OAIUjC,mBAAiB,IAJ3B,mBAInBD,EAJmB,KAIPmC,EAJO,OAMElC,oBAAkB,GANpB,mBAMnBhC,EANmB,KAMXC,EANW,OAOqB+B,mBAAiB,UAPtC,mBAOnBF,EAPmB,KAOFqC,EAPE,OASAnC,oBAAkB,GATlB,mBASnB1B,EATmB,KASZ8D,EATY,KAWpBC,EAAU,SAACpC,GACfjB,MAAM,sCAAsCiB,GACvCd,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACCA,GACD2C,EAAc3C,MAEnBG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAI,SAAUE,MACpCsC,EAAoB,IAGpBzD,EAAW,WACfuD,EAAgBZ,EAAWa,IAC3B9D,GAAU,IAiDNqE,EAAW,SAACC,GACbA,EAAYtD,GACbD,MAAM,wCAAwCuD,EAAYtD,GAAI,CAC1DC,OAAQ,OACRsD,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUJ,KAExBpD,MAAK,SAAAC,GAAS,OAAOA,EAAIC,UACzBF,MAAK,SAAAG,GAAI,OAAIC,QAAQC,IAAIF,MACzBG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAI,UAAWE,MAErCV,MAAM,oCAAqC,CACvCE,OAAQ,OACRsD,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUJ,KAExBpD,MAAK,SAAAC,GAAS,OAAOA,EAAIC,UACzBF,MAAK,SAAAG,GAAI,OAAIC,QAAQC,IAAIF,MACzBG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAI,UAAWE,OAIzC,GAAG1B,GACD,GAAqB,WAAlB8B,IACDqC,EAAmB,QAChBjB,EAAWa,IAAkB,CACCb,EAAWa,GACvCF,GACDK,EAAcL,EAAapD,WAIV,WAApBqB,IACDuC,EAAQR,EAAapD,MACrBuD,EAAoB,GACpBE,EAAc,IACdC,EAAmB,WAIvB,IAoBIS,EAAqBf,EAKzB,OAJI7D,IACF4E,EAAqB1B,EAAWa,IAIhC,yBAAK7D,UAAU,WACX,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,aACb,mDACA,sEAEA,kBAAC,EAAD,CAAQ0B,aArHK,SAAEiD,EAAqB/B,GAC1CA,EAAEgC,iBACF,IAAIP,EAA+B,eAAOV,GACvC7D,GACoB,SAAlB8B,GACDyC,EAAY9D,KAAOoE,EACnBX,EAAcK,EAAY7D,UAC1ByD,EAAmB,aACM,aAAlBrC,GACPyC,EAAY7D,SAAWmE,EACvBX,EAAcK,EAAY5D,aAC1BwD,EAAmB,gBAEK,gBAAlBrC,GACNyC,EAAY5D,YAAckE,EAC1BX,EAAcK,EAAY3D,SAC1BuD,EAAmB,YACM,YAAlBrC,GACPyC,EAAY3D,QAAUiE,EACtBX,EAAcK,EAAY1D,OAC1BsD,EAAmB,YACM,YAAlBrC,IACPyC,EAAY1D,MAAQgE,EACpBX,EAAc,IACdI,EAASC,GACTtE,GAAU,IAEZ6D,EAAgBS,IAEE,SAAfM,GACDf,EAAgB,CAACrD,KAAK,GAAGC,SAAS,GAAGC,YAAY,GAAGC,QAAQ,GAAGC,MAAM,KACrEZ,GAAU,IACY,UAAf4E,EACPtE,IACsB,WAAfsE,EACPT,GAAS,GACa,YAAfS,EACPT,GAAS,IAETC,EAAQQ,GACRb,EAAoB,KA6EoBnC,eAhCvB,SAAEiB,GACX,YAARA,EAAEY,KAAmBK,EAAmB,IAAM/D,EAChDgE,EAAqBD,EAAmB,GACtB,cAAVjB,EAAEY,KAAuBK,EAAiBb,EAAWV,OAAS,IAAMxC,EAC5EgE,EAAqBD,EAAmB,GACtB,WAAVjB,EAAEY,MAA+B,IAAX1D,GAC9BkE,EAAc,IACdjE,GAAU,IACQ,cAAV6C,EAAEY,MAAkC,IAAX1D,GACf,KAAf+B,GACDmC,EAAc,KAsB4DlE,OAAQA,EAAQ8B,gBAAmBA,EAAiBC,WAAcA,IACzIzB,EAAQ,kBAAC,EAAD,CAAYN,OAAQA,EAAQC,UAAWA,IAAgB,KAChE,kBAAC,EAAD,CAAeiD,WAAcA,EAAYC,WAlB9B,SAACM,GAClBO,EAAoBP,IAiBsDL,aAAgBW,EAAkBT,cAAiB,IACvH,kBAAC,EAAD,CAASjD,iBAAoBuE,EAAoBtE,MAAOA,EAAON,OAAUA,EAAQO,SAAYA,O,MC1JvGwE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e37cbd3b.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\ninterface Props {\r\n    addNew: boolean,\r\n    setAddNew: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\n\r\nconst AddCommand:React.FC<Props> = ({addNew, setAddNew}) => {\r\n    return(\r\n        <div className=\"add_command_button_div\">\r\n            <button className=\"button\" onClick={()=>{setAddNew(!addNew)}} >{addNew ? \"Cancel\" : \"Add command\"}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCommand;","import React from \"react\";\r\n\r\n\r\ninterface Props {\r\n    selectedItemData:any;\r\n    admin: boolean;\r\n    addNew: boolean;\r\n    editItem: () => void\r\n}\r\n\r\n\r\nconst Command:React.FC<Props> = ({selectedItemData, admin, addNew, editItem}) => {\r\n    const allData = selectedItemData;\r\n    \r\n    \r\n    const deleteCommand = () => {\r\n        if(window.confirm('DELETE POST ?')){\r\n            fetch(\"http://odehammar.com:5555/deletepost/\"+selectedItemData.id,{\r\n                method: \"DELETE\"\r\n            })\r\n            .then(res => { return res.json() })\r\n            .then(data => console.log(data))\r\n            .catch(err => console.log(\"Error\", err))\r\n        }\r\n    }\r\n\r\n    if(allData)\r\n    return(\r\n        <div>\r\n            <div className=\"command_background\">\r\n                <p className = \"command_topic topic\">= {allData.name} </p>\r\n                <p className = \"command_platform topic\">= {allData.platform} </p>\r\n                <p className = \"command_description topic\" >= {allData.description} </p>\r\n                <p className = \"command_options topic\" >= {allData.options} </p>\r\n                <p className = \"command_example topic\" >= {allData.howTo} </p>\r\n                {(admin && !addNew) ? \r\n                    <div className=\"command_buttons_div\">\r\n                        <button className=\"button\" onClick={() => editItem()} >Edit</button>\r\n                        <button className=\"button\" onClick={() => deleteCommand()} >DELETE</button>\r\n                    </div>\r\n                : null}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return(\r\n        <div>no data, loading....</div>\r\n    )\r\n}\r\n\r\nexport default Command;","import React, { useState } from 'react'\r\ninterface ClickProps {\r\n    searchForBtn: (searchstring: string, e:React.MouseEvent<HTMLButtonElement, MouseEvent>) => void,\r\n    handleKeypress: (e:React.KeyboardEvent<HTMLInputElement>) => void,\r\n    addNew: boolean,\r\n    selectedElement: string,\r\n    editString: string\r\n}\r\n\r\nconst Search:React.FC<ClickProps> = ({searchForBtn, handleKeypress, addNew, selectedElement, editString}) => {\r\n    const [searchString, setSearchString] = useState<string>(\"\")\r\n\r\n    const focusInput = (target:EventTarget & HTMLInputElement) => {\r\n        target.focus();\r\n        target.selectionStart = searchString.length;\r\n    }\r\n\r\n    if(editString !== \"\" && searchString === \"\" && addNew){\r\n        if(editString)\r\n            setSearchString(editString)\r\n    }\r\n    \r\n    console.log(\"From search: \", editString)\r\n        \r\n    return(\r\n        <div className=\"search_div\">\r\n            <h3 className=\"search_topic\"> Search for:  </h3>\r\n                <form>\r\n                    <div className=\"search_input_div\">\r\n                        <div>\r\n                            <input className=\"search_input\" autoFocus={true}\r\n                                onBlur={({ target }) => focusInput(target)}\r\n                                autoComplete=\"off\" value={searchString}\r\n                                spellCheck=\"false\"\r\n                                onChange = {(e) => setSearchString(e.target.value)}\r\n                                onKeyDown = { (e) =>{\r\n                                    e.currentTarget.selectionStart = searchString.length\r\n                                    handleKeypress(e)\r\n                                }}\r\n                            />\r\n                            <p className = \"search_input_paragraf\">{selectedElement} :&gt;{searchString}.</p>\r\n                        </div>\r\n                        <button className=\"search_button button\" onClick = {(e) => {\r\n                            searchForBtn(searchString, e)\r\n                            setSearchString(\"\")\r\n                            }}\r\n                         >&lt; Search &gt;</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Search;","import React from 'react'\r\ninterface Props {\r\n    searchData: any;\r\n    selectItem: (id:any) => void;\r\n    selectedIndex: number,\r\n    selectedItem: any;\r\n}\r\n\r\nconst SearchResults:React.FC<Props> = ({searchData, selectItem, selectedItem, selectedIndex}) => {\r\n    \r\n    var dataToPrint = [];\r\n\r\n    if(searchData)\r\n        dataToPrint = searchData.map((item:any, index:number) => {\r\n            if(selectedItem === index){\r\n                return(\r\n                    <li className = \"result_listitem selected_listitem\" key = {item.id} >\r\n                        <p>{item.name.toUpperCase()}</p>\r\n                        <p>{item.platform.toUpperCase()}</p>\r\n                    </li>\r\n                )\r\n            }\r\n\r\n            return(\r\n                <li className = \"result_listitem\" key = {item.id} onClick = {()=>{selectItem(index)}} >\r\n                    <p>{item.name.toUpperCase()}</p>\r\n                    <p>{item.platform.toUpperCase()}</p>\r\n                </li>\r\n                )\r\n            })\r\n    return(\r\n        <div className=\"result_background\">\r\n            <div className = \"result_div\">\r\n                <ul className = \"result_list\">\r\n                    <li className = \"result_listitem result_listtopic\" >\r\n                        <p>NAME</p>\r\n                        <p>PLATFORM</p>\r\n                    </li>\r\n                    <li className = \"result_listitem result_listtopic\" >\r\n                        <p>----------</p>\r\n                        <p>----------</p>\r\n                    </li>\r\n                    {dataToPrint}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResults;","import React, { useState } from 'react';\r\nimport AddCommand from './Components/AddCommand';\r\nimport Command from './Components/Command'\r\nimport Search from './Components/Search'\r\nimport SearchResults from './Components/SearchResults';\r\nimport DBCommandObject from \"./Components/DBCommandObject\"\r\n\r\n    /**\r\n     * Create login in node backend and enter credentials to edit or delete data from DB\r\n     * ( admin state )\r\n     */\r\n\r\nconst App: React.FC = () => {\r\n  const [editItemData, setEditItemData] = useState<DBCommandObject>({name:\"\",platform:\"\",description:\"\",options:\"\",howTo:\"\"})  \r\n  const [selectedMenuItem, setSelectedMenuItem] = useState<number>(0)\r\n  const [searchData, setSearchData] = useState([]);\r\n  const [editString, setEditString] = useState<string>(\"\");\r\n\r\n  const [addNew, setAddNew] = useState<boolean>(false)\r\n  const [selectedElement, setSelectedElement] = (useState<string>(\"Search\"))\r\n\r\n  const [admin, setAdmin] = useState<boolean>(false)\r\n\r\n  const getData = (searchString:string) => {\r\n    fetch('http://odehammar.com:5555/getposts/'+searchString)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data)\r\n              setSearchData(data);\r\n        })\r\n        .catch(err => console.log(\"Error \", err))\r\n        setSelectedMenuItem(0)\r\n  }\r\n\r\n  const editItem = () => {\r\n    setEditItemData(searchData[selectedMenuItem])\r\n    setAddNew(true)\r\n  }\r\n\r\n\r\n  const searchForBtn = ( searchstring:string, e:React.MouseEvent<HTMLButtonElement, MouseEvent> ) => {\r\n    e.preventDefault();\r\n    var tempElement:DBCommandObject|any = {...editItemData}\r\n    if(addNew){     \r\n      if(selectedElement===\"NAME\"){\r\n        tempElement.name = searchstring;\r\n        setEditString(tempElement.platform)\r\n        setSelectedElement(\"PLATFORM\")\r\n      }else if(selectedElement===\"PLATFORM\"){\r\n        tempElement.platform = searchstring;\r\n        setEditString(tempElement.description)\r\n        setSelectedElement(\"DESCRIPTION\")\r\n      }\r\n      else if(selectedElement===\"DESCRIPTION\"){\r\n        tempElement.description = searchstring;\r\n        setEditString(tempElement.options)\r\n        setSelectedElement(\"OPTIONS\")\r\n      }else if(selectedElement===\"OPTIONS\"){\r\n        tempElement.options = searchstring;\r\n        setEditString(tempElement.howTo)\r\n        setSelectedElement(\"EXAMPLE\")\r\n      }else if(selectedElement===\"EXAMPLE\"){\r\n        tempElement.howTo = searchstring;\r\n        setEditString(\"\")\r\n        postData(tempElement);\r\n        setAddNew(false)\r\n      }\r\n      setEditItemData(tempElement)\r\n    }else{\r\n      if(searchstring===\"/add\"){\r\n        setEditItemData({name:\"\",platform:\"\",description:\"\",options:\"\",howTo:\"\"})\r\n        setAddNew(true)\r\n      }else if(searchstring===\"/edit\"){\r\n        editItem()\r\n      }else if(searchstring===\"/login\"){\r\n        setAdmin(true)\r\n      }else if(searchstring===\"/logout\"){\r\n        setAdmin(false)      \r\n      }else{\r\n        getData(searchstring);\r\n        setSelectedMenuItem(0)\r\n      }\r\n    }\r\n  }\r\n\r\n  const postData = (tempElement:DBCommandObject)=>{\r\n    if(tempElement.id){\r\n      fetch('http://odehammar.com:5555/updatepost/'+tempElement.id, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(tempElement)\r\n      })\r\n      .then(res => { return res.json() })\r\n      .then(data => console.log(data))\r\n      .catch(err => console.log(\"Error: \", err))\r\n    }else{\r\n      fetch('http://odehammar.com:5555/addpost', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(tempElement)\r\n      })\r\n      .then(res => { return res.json() })\r\n      .then(data => console.log(data))\r\n      .catch(err => console.log(\"Error: \", err))\r\n    }\r\n}\r\n  \r\n  if(addNew){\r\n    if(selectedElement===\"Search\"){\r\n      setSelectedElement(\"NAME\")\r\n      if(searchData[selectedMenuItem]){\r\n        var tempdata:DBCommandObject = searchData[selectedMenuItem]\r\n        if(editItemData)\r\n          setEditString(editItemData.name)\r\n      }\r\n    }\r\n  }else{\r\n    if(selectedElement !== \"Search\"){\r\n      getData(editItemData.name);\r\n      setSelectedMenuItem(0)\r\n      setEditString(\"\")\r\n      setSelectedElement(\"Search\")\r\n    }\r\n  }\r\n\r\n  const handleKeyPress = ( e:React.KeyboardEvent<HTMLInputElement> ) => {\r\n    if( e.key===\"ArrowUp\" && selectedMenuItem > 0 && !addNew){\r\n      setSelectedMenuItem( selectedMenuItem - 1 )\r\n    }else if (e.key === \"ArrowDown\" && selectedMenuItem<searchData.length - 1 && !addNew){\r\n      setSelectedMenuItem( selectedMenuItem + 1 )\r\n    }else if (e.key === \"Escape\" && addNew === true){\r\n      setEditString(\"\")\r\n      setAddNew(false)\r\n    }else if (e.key === \"Backspace\" && addNew === true){\r\n      if(editString !== \"\")\r\n        setEditString(\"\")\r\n    }else{\r\n      //console.log(e.key)\r\n    }\r\n  }\r\n\r\n  const selectItem = (index:number) => {\r\n    setSelectedMenuItem(index);\r\n  }\r\n\r\n  var selectedOrEditItem = editItemData;\r\n  if(!addNew){\r\n    selectedOrEditItem = searchData[selectedMenuItem]\r\n  }\r\n\r\n  return (\r\n    <div className=\"BaseApp\">\r\n        <div className=\"dos_background\">\r\n        <div className=\"app_topic\">\r\n          <p>NODE COMMANDER v1.0 </p>\r\n          <p>(c) 1987 HedaSoft, ALL RIGHTS RESERVED</p>\r\n        </div>\r\n          <Search searchForBtn = {searchForBtn} handleKeypress = {handleKeyPress} addNew={addNew} selectedElement = {selectedElement} editString = {editString}/>\r\n          {admin ? <AddCommand addNew={addNew} setAddNew={setAddNew} /> : null}\r\n          <SearchResults searchData = {searchData} selectItem = {selectItem}  selectedItem = {selectedMenuItem} selectedIndex = {5}/>\r\n          <Command selectedItemData = {selectedOrEditItem} admin={admin} addNew = {addNew} editItem = {editItem} />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport \"./Css/styles.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}